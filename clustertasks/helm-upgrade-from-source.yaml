apiVersion: tekton.dev/v1beta1
kind: Task
metadata:
  annotations:
    operator.tekton.dev/last-applied-hash: c7e38035c5dd0efadad1b2134ac3663b3943a9e4eb1a3eb710f9cf43a42c8e48
    tekton.dev/categories: Deployment
    tekton.dev/pipelines.minVersion: 0.12.1
    tekton.dev/platforms: linux/amd64,linux/s390x,linux/ppc64le,linux/arm64
    tekton.dev/tags: helm
  creationTimestamp: "2024-12-13T05:08:23Z"
  generation: 1
  labels:
    app.kubernetes.io/version: "0.3"
    operator.tekton.dev/provider-type: community
  name: helm-upgrade-from-source
  ownerReferences:
  - apiVersion: operator.tekton.dev/v1alpha1
    blockOwnerDeletion: true
    controller: true
    kind: TektonInstallerSet
    name: addon-custom-communityTask-2qtsc
    uid: e8c93a3d-1ba2-4fe2-92c9-fd57bdbd5c85
  resourceVersion: "53951"
  uid: 14cf74b8-0a41-4cd2-8afd-97d35cf6a519
spec:
  description: These tasks will install / upgrade a helm chart into your Kubernetes
    / OpenShift Cluster using Helm
  params:
  - description: The directory in source that contains the helm chart
    name: charts_dir
    type: string
  - default: v1.0.0
    description: The helm release version in semantic versioning format
    name: release_version
    type: string
  - default: helm-release
    description: The helm release name
    name: release_name
    type: string
  - default: ""
    description: The helm release namespace
    name: release_namespace
    type: string
  - default: ""
    description: 'Specify the values you want to overwrite, comma separated: autoscaling.enabled=true,replicas=1'
    name: overwrite_values
    type: string
  - default: values.yaml
    description: The values file to be used
    name: values_file
    type: string
  - default: docker.io/lachlanevenson/k8s-helm@sha256:5c792f29950b388de24e7448d378881f68b3df73a7b30769a6aa861061fd08ae
    description: helm image to be used
    name: helm_image
    type: string
  - default: ""
    description: Extra parameters passed for the helm upgrade command
    name: upgrade_extra_params
    type: string
  steps:
  - image: $(params.helm_image)
    name: upgrade
    resources: {}
    script: |
      echo current installed helm releases
      helm list --namespace "$(params.release_namespace)"

      echo installing helm chart...
      helm upgrade --install --wait --values "$(params.charts_dir)/$(params.values_file)" --namespace "$(params.release_namespace)" --version "$(params.release_version)" "$(params.release_name)" "$(params.charts_dir)" --debug --set "$(params.overwrite_values)" $(params.upgrade_extra_params)
    workingDir: /workspace/source
  workspaces:
  - name: source
