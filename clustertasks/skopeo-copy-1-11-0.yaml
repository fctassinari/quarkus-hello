apiVersion: tekton.dev/v1beta1
kind: Task
metadata:
  annotations:
    operator.tekton.dev/last-applied-hash: 4672e242dbfb444200cf84a737157e22e038ce7520ef0806da9fa4d173778bca
    tekton.dev/categories: CLI
    tekton.dev/displayName: skopeo copy
    tekton.dev/pipelines.minVersion: 0.12.1
    tekton.dev/platforms: linux/amd64,linux/s390x,linux/ppc64le,linux/arm64
    tekton.dev/tags: cli
  creationTimestamp: "2024-12-13T05:08:22Z"
  generation: 1
  labels:
    app.kubernetes.io/version: "0.2"
    operator.tekton.dev/operand-name: openshift-pipelines-addons
    operator.tekton.dev/provider-type: redhat
  name: skopeo-copy-1-11-0
  ownerReferences:
  - apiVersion: operator.tekton.dev/v1alpha1
    blockOwnerDeletion: true
    controller: true
    kind: TektonInstallerSet
    name: addon-versioned-Tasks-1.11-94wk8
    uid: eb9843ed-d1b7-40ec-b40e-9bc97008c20b
  resourceVersion: "53914"
  uid: 33be0b49-a1bd-466f-80c2-5b847418e6e3
spec:
  description: |-
    Skopeo is a command line tool for working with remote image registries.
    Skopeo doesnâ€™t require a daemon to be running while performing its operations. In particular, the handy skopeo command called copy will ease the whole image copy operation. The copy command will take care of copying the image from internal.registry to production.registry. If your production registry requires credentials to login in order to push the image, skopeo can handle that as well.
  params:
  - default: ""
    description: URL of the image to be copied to the destination registry
    name: srcImageURL
    type: string
  - default: ""
    description: URL of the image where the image from source should be copied to
    name: destImageURL
    type: string
  - default: "true"
    description: Verify the TLS on the src registry endpoint
    name: srcTLSverify
    type: string
  - default: "true"
    description: Verify the TLS on the dest registry endpoint
    name: destTLSverify
    type: string
  steps:
  - env:
    - name: HOME
      value: /tekton/home
    image: registry.redhat.io/rhel8/skopeo@sha256:91f6ffc3be778ebeb59a0da528f93da5a0332b61d1e689ffdbaf159d25cabaeb
    name: skopeo-copy
    resources: {}
    script: |
      # Function to copy multiple images.
      #
      copyimages() {
        filename="$(workspaces.images-url.path)/url.txt"
        while IFS= read -r line || [ -n "$line" ]
        do
          cmd=""
          for url in $line
          do
            # echo $url
            cmd="$cmd \
                $url"
          done
          skopeo copy "$cmd" --src-tls-verify="$(params.srcTLSverify)" --dest-tls-verify="$(params.destTLSverify)"
          echo "$cmd"
        done < "$filename"
      }
      #
      # If single image is to be copied then, it can be passed through
      # params in the taskrun.
      if [ "$(params.srcImageURL)" != "" ] && [ "$(params.destImageURL)" != "" ] ; then
        skopeo copy "$(params.srcImageURL)" "$(params.destImageURL)" --src-tls-verify="$(params.srcTLSverify)" --dest-tls-verify="$(params.destTLSverify)"
      else
        # If file is provided as a configmap in the workspace then multiple images can be copied.
        #
        copyimages
      fi
    securityContext:
      runAsNonRoot: true
      runAsUser: 65532
  workspaces:
  - name: images-url
