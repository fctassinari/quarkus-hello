apiVersion: tekton.dev/v1beta1
kind: Task
metadata:
  annotations:
    operator.tekton.dev/last-applied-hash: eb2bfd49cf3e3a1e2a1c4942687f4816c8e9010bd2bdf9770cd09287c67b0474
    tekton.dev/categories: Deployment, Kubernetes
    tekton.dev/displayName: kubeconfig creator
    tekton.dev/pipelines.minVersion: 0.12.1
    tekton.dev/platforms: linux/amd64,linux/s390x,linux/ppc64le
    tekton.dev/tags: deploy
  creationTimestamp: "2024-12-13T05:08:23Z"
  generation: 1
  labels:
    app.kubernetes.io/version: "0.1"
    operator.tekton.dev/provider-type: community
  name: kubeconfig-creator
  ownerReferences:
  - apiVersion: operator.tekton.dev/v1alpha1
    blockOwnerDeletion: true
    controller: true
    kind: TektonInstallerSet
    name: addon-custom-communityTask-2qtsc
    uid: e8c93a3d-1ba2-4fe2-92c9-fd57bdbd5c85
  resourceVersion: "53967"
  uid: 9aa3ff55-41d2-4f30-addb-68840a54497b
spec:
  description: |-
    This Task do a similar job to the Cluster PipelineResource and are intended as its replacement.
    This task creates a kubeconfig file that can be used to configure access to the different clusters. A common use case for this task is to deploy your application/function on different clusters. The task will use the kubeconfigwriter image and the provided parameters to create a kubeconfig file that can be used by other tasks in the pipeline to access the target cluster.
  params:
  - description: name of the cluster
    name: name
    type: string
  - description: address of the cluster
    name: url
    type: string
  - description: username for basic authentication to the cluster
    name: username
    type: string
  - default: ""
    description: password for basic authentication to the cluster
    name: password
    type: string
  - default: ""
    description: contains PEM-encoded certificate authority certificates
    name: cadata
    type: string
  - default: ""
    description: contains PEM-encoded data from a client key file for TLS
    name: clientKeyData
    type: string
  - default: ""
    description: contains PEM-encoded data from a client cert file for TLS
    name: clientCertificateData
    type: string
  - default: ""
    description: default namespace to use on unspecified requests
    name: namespace
    type: string
  - default: ""
    description: bearer token for authentication to the cluster
    name: token
    type: string
  - default: "false"
    description: to indicate server should be accessed without verifying the TLS certificate
    name: insecure
    type: string
  steps:
  - args:
    - -clusterConfig
    - '{ "name":"$(params.name)", "url":"$(params.url)", "username":"$(params.username)",
      "password":"$(params.password)", "cadata":"$(params.cadata)", "clientKeyData":"$(params.clientKeyData)",
      "clientCertificateData":"$(params.clientCertificateData)", "namespace":"$(params.namespace)",
      "token":"$(params.token)", "Insecure":$(params.insecure) }'
    - -destinationDir
    - $(workspaces.output.path)
    command:
    - /ko-app/kubeconfigwriter
    image: gcr.io/tekton-releases/github.com/tektoncd/pipeline/cmd/kubeconfigwriter@sha256:b2c6d0962cda88fb3095128b6202da9b0e6c9c0df3ef6cf7863505ffd25072fd
    name: write
    resources: {}
  workspaces:
  - name: output
