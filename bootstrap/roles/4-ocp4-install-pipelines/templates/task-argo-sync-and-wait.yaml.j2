apiVersion: tekton.dev/v1beta1
kind: Task
metadata:
  name: argocd-task-sync-and-wait
  namespace: "{{ pipeline_namespace }}"
  labels:
    app.kubernetes.io/version: "0.1"
  annotations:
    tekton.dev/pipelines.minVersion: "0.12.1"
    tekton.dev/tags: deploy
    tekton.dev/displayName: "argocd"
spec:
  description: >-
    This task syncs (deploys) an Argo CD application and waits for it to be healthy.
    To do so, it requires the address of the Argo CD server and some form of
    authentication either a username/password or an authentication token.

  params:
    - name: application-name
      description: name of the application to sync
    - name: revision
      description: the revision to sync to
      default: HEAD
    - name: flags
      default: --
  stepTemplate:
    envFrom:
      - configMapRef:
          name: cm-argocd-env  # used for server address
      - secretRef:
          name: argocd-env-secret  # used for authentication (username/password or auth token)
  steps:
    - name: login-sync-wait
      image: openshift/smt-pipeline-tools:1.0
      script: |
        
        echo "------------------" &&  \
        echo "Git " && \
        git --version && \
        echo "ArgoCD " && \
        argocd version --client && \
        echo "Tekton " && \
        tkn version && \
        echo "Rox " && \
        roxctl version && \
        echo "Oc " && \
        oc version
    
    
        echo "--------------------------------------------"
        echo $ARGOCD_AUTH_TOKEN
        echo "argocd login $ARGOCD_SERVER --username=$ARGOCD_USERNAME --password=$ARGOCD_PASSWORD"
        
        
        if [ -z $ARGOCD_AUTH_TOKEN ]; then
          yes | argocd login $ARGOCD_SERVER --username=$ARGOCD_USERNAME --password=$ARGOCD_PASSWORD ;
        fi
        
        echo "1"
        echo "argocd app sync $(params.application-name) --revision $(params.revision) $(params.flags) && sleep 3"
        argocd app sync $(params.application-name) --revision $(params.revision) $(params.flags) && sleep 3

        echo "2"
        echo "argocd app wait $(params.application-name) --health $(params.flags)"
        argocd app wait $(params.application-name) --health $(params.flags)

        echo "3"