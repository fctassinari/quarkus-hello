kind: Deployment
apiVersion: v1
metadata:
  annotations:
    template.alpha.openshift.io/wait-for-ready: "true"
  name: "{{ sonar_database_service_name }}"
  namespace: "{{ sonar_namespace }}"
  labels:
    app: sonarqube
spec:
  replicas: 1
  selector:
    name: {{ sonar_database_service_name }}
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        name: {{ sonar_database_service_name }}
    spec:
      containers:
        - capabilities: {}
          env:
            - name: POSTGRESQL_USER
              valueFrom:
                secretKeyRef:
                  key: database-user
                  name: {{ sonar_database_service_name }}
            - name: POSTGRESQL_PASSWORD
              valueFrom:
                secretKeyRef:
                  key: database-password
                  name: {{ sonar_database_service_name }}
            - name: POSTGRESQL_DATABASE
              valueFrom:
                secretKeyRef:
                  key: database-name
                  name: {{ sonar_database_service_name }}
            - name: POSTGRESQL_MAX_CONNECTIONS
              value: {{ sonar_postgresql_max_connections }}
            - name: POSTGRESQL_SHARED_BUFFERS
              value: {{ sonar_postgresql_shared_buffers }}
            - name: POSTGRESQL_ADMIN_PASSWORD
              value: {{ sonar_postgresql_admin_password }}
          image: ' '
          imagePullPolicy: IfNotPresent
          livenessProbe:
            initialDelaySeconds: 30
            tcpSocket:
              port: 5432
            timeoutSeconds: 1
            failureThreshold: 10
            periodSeconds: 20
          name: postgresql
          ports:
            - containerPort: 5432
              protocol: TCP
          readinessProbe:
            exec:
              command:
                - /bin/sh
                - -i
                - -c
                - psql -h 127.0.0.1 -U sonar -q -d sonar -c 'SELECT 1'
            initialDelaySeconds: 30
            timeoutSeconds: 1
            failureThreshold: 10
          resources:
            limits:
              memory: {{ sonar_postgresql_memory_limit }}
          securityContext:
            capabilities: {}
            privileged: false
          terminationMessagePath: /dev/termination-log
          volumeMounts:
            - name: {{ sonar_database_service_name }}-data
              mountPath: /var/lib/pgsql/data
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      volumes:
        - name: {{ sonar_database_service_name }}-data
          persistentVolumeClaim:
            claimName: {{ sonar_database_service_name }}
  triggers:
    - imageChangeParams:
        automatic: true
        containerNames:
          - postgresql
        from:
          kind: ImageStreamTag
          name: postgresql:{{ sonar_postgresql_version }}
          namespace: openshift
        lastTriggeredImage: ""
      type: ImageChange
    - type: ConfigChange
