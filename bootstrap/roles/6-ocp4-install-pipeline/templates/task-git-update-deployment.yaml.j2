apiVersion: tekton.dev/v1beta1
kind: Task
metadata:
  annotations:
    tekton.dev/pipelines.minVersion: 0.12.1
    tekton.dev/tags: git
  name: git-update-deployment
  namespace: "{{ pipeline_namespace }}"
  labels:
    app.kubernetes.io/version: '0.1'
    operator.tekton.dev/provider-type: community
spec:
  description: This Task can be used to update image digest in a Git repo using kustomize
  params:
    - name: GIT_REPOSITORY
      type: string
    - name: GIT_USERNAME
      type: string
    - name: GIT_PASSWORD
      type: string
    - name: GIT_BRANCH
      type: string
    - name: CURRENT_IMAGE
      type: string
    - name: NEW_IMAGE
      type: string
    - name: NEW_DIGEST
      type: string
    - name: KUSTOMIZATION_PATH
      type: string
  workspaces:
    - description: The workspace consisting of maven project.
      name: workspace
#    - description: The sshPriveteKey to connect Repo
#      name: azure-secret

  results:
    - name: commit
      description: The commit SHA

  steps:
    - name: git-clone
      image: registry.redhat.io/openshift-pipelines/pipelines-git-init-rhel8@sha256:868966ef9d4b54952d8a74eb83bba40eb1f52c0148994fa704efd0e3797c61c5
      workingDir: $(workspaces.workspace.path)
      script: |
        #!/bin/bash
        set -e
        #echo "Acessando chave SSH do workspace"
        #cat /workspace/azure-secret/ssh-privatekey

        # Criar o diretório esperado pelo ssh
        #mkdir -p ~/.ssh

        # Copiar a chave privada do workspace para o local correto
        #cp /workspace/azure-secret/ssh-privatekey ~/.ssh/id_rsa

        # Ajustar as permissões da chave privada
        #chmod 600 ~/.ssh/id_rsa

        # Adicionar o host ao arquivo known_hosts para evitar prompts de confiança
        #ssh-keyscan azuredevops.pro.intra.rs.gov.br >> ~/.ssh/known_hosts
        
        rm -rf git-update-digest-workdir
        git clone $(params.GIT_REPOSITORY) git-update-digest-workdir

    - name: update-digest
      image: k8s.gcr.io/kustomize/kustomize:v3.8.7
      workingDir: $(workspaces.workspace.path)
      script: |
        cd git-update-digest-workdir/$(params.KUSTOMIZATION_PATH)
        pwd
        /app/kustomize edit set image $(params.CURRENT_IMAGE)=$(params.NEW_IMAGE)@$(params.NEW_DIGEST)
        echo "##########################"
        echo "### kustomization.yaml ###"
        echo "##########################"
        cat kustomization.yaml
        ls -la

    - name: git-commit
      image: registry.redhat.io/openshift-pipelines/pipelines-git-init-rhel8@sha256:868966ef9d4b54952d8a74eb83bba40eb1f52c0148994fa704efd0e3797c61c5
      workingDir: $(workspaces.workspace.path)
      script: |
        #mkdir -p ~/.ssh
        #cp /workspace/azure-secret/ssh-privatekey ~/.ssh/id_rsa
        #chmod 600 ~/.ssh/id_rsa
        #ssh-keyscan azuredevops.pro.intra.rs.gov.br >> ~/.ssh/known_hosts

        cd git-update-digest-workdir
        git config user.email "tekton-pipelines-ci@redhat.com"
        git config user.name "tekton-pipelines-ci"

        git status
        #git add $(params.KUSTOMIZATION_PATH)/kustomization.yaml
        git add . 
        #git commit -m "[$(context.pipelineRun.name)] Image digest updated"
        git commit -m "[ci] Image digest updated"

        git remote add auth-origin $(echo $(params.GIT_REPOSITORY) | sed -E "s#http://(.*)#http://$(params.GIT_USERNAME):$(params.GIT_PASSWORD)@\1#g")
          git push auth-origin $(params.GIT_BRANCH)



        git push

        RESULT_SHA="$(git rev-parse HEAD | tr -d '\n')"
        EXIT_CODE="$?"
        if [ "$EXIT_CODE" != 0 ]
        then
          exit $EXIT_CODE
        fi
        # Make sure we don't add a trailing newline to the result!
        echo -n "$RESULT_SHA" > $(results.commit.path)
