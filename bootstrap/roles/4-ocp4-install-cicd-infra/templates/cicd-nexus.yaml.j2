---
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  labels:
    app: "{{ nexus_namespace }}"
  name: "pvc-{{ nexus_namespace }}"
  namespace: "{{ nexus_namespace }}"
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: "{{ nexus_data_volume_capacity }}"
  volumeMode: Filesystem
---
kind: Service
apiVersion: v1
metadata:
  name: "{{ nexus_namespace }}"
  namespace: "{{ nexus_namespace }}"
  labels:
    app: "{{ nexus_namespace }}"
    app.kubernetes.io/component: "{{ nexus_namespace }}"
    app.kubernetes.io/instance: "{{ nexus_namespace }}"
spec:
  ports:
    - name: 8081-tcp
      protocol: TCP
      port: 8081
      targetPort: 8081
  selector:
    deployment: "{{ nexus_namespace }}"
  type: ClusterIP
---
kind: Service
apiVersion: v1
metadata:
  name: "{{ nexus_namespace }}-registry"
  namespace: "{{ nexus_namespace }}"
  labels:
    app: "{{ nexus_namespace }}"
    app.kubernetes.io/component: "{{ nexus_namespace }}"
    app.kubernetes.io/instance: "{{ nexus_namespace }}"
spec:
  ports:
    - protocol: TCP
      port: 5000
      targetPort: 5000
  type: ClusterIP
  selector:
    deployment: "{{ nexus_namespace }}"
---
kind: Route
apiVersion: route.openshift.io/v1
metadata:
  name: "{{ nexus_namespace }}"
  namespace: "{{ nexus_namespace }}"
  labels:
    app: "{{ nexus_namespace }}"
    app.kubernetes.io/component: "{{ nexus_namespace }}"
    app.kubernetes.io/instance: "{{ nexus_namespace }}"
spec:
  host: "{{ nexus_url }}"
  to:
    kind: Service
    name: "{{ nexus_namespace }}"
    weight: 100
  port:
    targetPort: 8081-tcp
  tls:
    termination: edge
  wildcardPolicy: None
---
kind: Route
apiVersion: route.openshift.io/v1
metadata:
  name: "{{ nexus_namespace }}-registry"
  namespace: "{{ nexus_namespace }}"
  labels:
    app: "{{ nexus_namespace }}"
    app.kubernetes.io/component: "{{ nexus_namespace }}"
    app.kubernetes.io/instance: "{{ nexus_namespace }}"
  annotations:
    openshift.io/host.generated: 'true'
spec:
  host: "{{ nexus_registry_url }}"
  to:
    kind: Service
    name: "{{ nexus_namespace }}-registry"
    weight: 100
  port:
    targetPort: 5000
  tls:
    termination: edge
  wildcardPolicy: None
---
kind: Deployment
apiVersion: apps/v1
metadata:
  name: "{{ nexus_namespace }}"
  namespace: "{{ nexus_namespace }}"
  labels:
    app: "{{ nexus_namespace }}"
    app.kubernetes.io/component: "{{ nexus_namespace }}"
    app.kubernetes.io/instance: "{{ nexus_namespace }}"
spec:
  replicas: 1
  selector:
    matchLabels:
      deployment: "{{ nexus_namespace }}"
  template:
    metadata:
      labels:
        deployment: "{{ nexus_namespace }}"
    spec:
      volumes:
        - name: nexus-volume-1
          persistentVolumeClaim:
            claimName: "pvc-{{ nexus_namespace }}"
      containers:
        - resources:
            limits:
              cpu: '4'
              memory: 4Gi
            requests:
              cpu: 500m
              memory: 1Gi
          readinessProbe:
            httpGet:
              path: /
              port: 8081
              scheme: HTTP
            initialDelaySeconds: 60
            timeoutSeconds: 1
            periodSeconds: 10
            successThreshold: 1
            failureThreshold: 3
          terminationMessagePath: /dev/termination-log
          name: nexus
          livenessProbe:
            exec:
              command:
                - echo
                - ok
            initialDelaySeconds: 60
            timeoutSeconds: 1
            periodSeconds: 10
            successThreshold: 1
            failureThreshold: 3
          ports:
            - containerPort: 8081
              protocol: TCP
          imagePullPolicy: IfNotPresent
          volumeMounts:
            - name: nexus-volume-1
              mountPath: /nexus-data
          terminationMessagePolicy: File
          image: "{{ nexus_image }}"
      restartPolicy: Always
      terminationGracePeriodSeconds: 30
      dnsPolicy: ClusterFirst
      securityContext: {}
      schedulerName: default-scheduler
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 25%
      maxSurge: 25%
  revisionHistoryLimit: 10
  progressDeadlineSeconds: 600
