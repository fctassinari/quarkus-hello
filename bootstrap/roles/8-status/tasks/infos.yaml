- name: extract quay hostname
  shell: |
    oc get route {{ quay_registry_name }}-quay -o jsonpath='{.spec.host}' -n {{ quay_namespace }}
  register: quay_hostname_result
  delay: 5
  retries: 10
  until:
    - quay_hostname_result.stdout != ""

- name: extract sonarqube hostname
  shell: |
    oc get route sonarqube -o jsonpath='{.spec.host}' -n {{ sonar_namespace }}
  register: sonar_hostname_result
  delay: 5
  retries: 10
  until:
    - sonar_hostname_result.stdout != ""

- name: extract gogs hostname
  shell: |
    oc get route gogs -o jsonpath='{.spec.host}' -n {{ repo_namespace }}
  register: gogs_hostname_result
  delay: 5
  retries: 10
  until:
    - gogs_hostname_result.stdout != ""



#- name: Get sonarqube route
#  kubernetes.core.k8s_info:
#    kind: Route
#    api_version: route.openshift.io/v1
#    namespace: "{{ sonar_namespace }}"
#    name: sonarqube
#  register: sonar_route
#  retries: 10
#  delay: 20
#  until:
#    - sonar_route.resources[0].spec.host is defined
#
#- name: Get gogs route
#  kubernetes.core.k8s_info:
#    kind: Route
#    api_version: route.openshift.io/v1
#    namespace: "{{ repo_namespace }}"
#    name: gogs
#  register: r_gogs_route
#  retries: 10
#  delay: 20
#  until:
#    - r_gogs_route.resources[0].spec.host is defined

- name: Infos
  debug:
    msg:
      - "----- Quay -----"
      - "Rota:      https://{{ quay_hostname_result.stdout }}"
      - "User:      {{ quay_admin_username }}"
      - "Pass:      {{ quay_admin_password }}"
      - "Robot:     {{ quay_robot_account }}"
      - "Namespace: {{ quay_namespace }}"
      - "----- Sonarqube -----"
      - "Rota:      https://{{ sonar_hostname_result.stdout }}"
      - "User:      admin"
      - "Pass:      admin1234"
      - "Namespace: {{ sonar_namespace }}"
      - "----- Gogs -----"
      - "Rota:      http://{{ gogs_hostname_result.stdout }}"
      - "User:      gogs"
      - "Pass:      gogs"
      - "Namespace: {{ repo_namespace }}"
