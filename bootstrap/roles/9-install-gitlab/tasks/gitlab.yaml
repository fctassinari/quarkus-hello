#
#- name: Create OperatorGroup
#  kubernetes.core.k8s:
#    state: present
#    definition: "{{ lookup('template', 'gitlab-operator-group.yaml.j2') }}"
#
#- name: Create Subscription
#  kubernetes.core.k8s:
#    state: present
#    definition: "{{ lookup('template', 'gitlab-subscription.yaml.j2') }}"
#
#- name: Deploy GitLab Custom Resource
#  kubernetes.core.k8s:
#    state: present
#    definition: "{{ lookup('template', 'gitlab-cr.yaml.j2') }}"
#

- name: Initialize empty variables
  set_fact:
    gitlab_routes: []
    gitlab_filtered_routes: []

- name: Wait for route Gitlab with the desired prefix to appear
  vars:
    gitlab_namespace: "{{ gitlab_namespace }}"
  block:
    - name: Fetch routes from the namespace
      set_fact:
        gitlab_routes: "{{ lookup('k8s', kind='Route', api_version='route.openshift.io/v1', namespace=gitlab_namespace) | list }}"

    - name: Filter routes with the desired prefix
      set_fact:
        gitlab_filtered_routes: "{{ gitlab_routes | selectattr('metadata.name', 'search', '^gitlab-webservice-default.*') | list }}"
  until: gitlab_filtered_routes | length > 0
  retries: 40
  delay: 10

- name: Fail if no routes were found
  fail:
    msg: "No route found with the prefix 'gitlab-webservice-default' after waiting."
  when: gitlab_filtered_routes | length == 0



- name: Print Gitlab Route
  debug:
    msg: "{{ gitlab_filtered_routes }}"



- name: Get Gitlab password
  kubernetes.core.k8s_info:
    kind: Secret
    api_version: /v1
    name: gitlab-gitlab-initial-root-password
    namespace: "{{ gitlab_namespace }}"
  register: gitlab_pass

- name: debug
  debug:
    msg: "{{ gitlab_pass.resources[0].data['password'] }}"

- name: Print Gitlab Password
  shell: "echo -n {{ gitlab_pass.resources[0].data['password'] }}  | base64 --decode"
  args:
    executable: /bin/bash
  register: shell_base64

#  oc create route edge rt-cert --service=gitlab-webservice-default --hostname=gitl.apps.cluster-qq995.sandbox2890.opentlc.com --path=/ --port=http-workhorse
