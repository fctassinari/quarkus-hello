apiVersion: tekton.dev/v1
kind: Pipeline
metadata:
  name: "{{ pipeline_namespace }}"
  namespace: "{{ pipeline_namespace }}"
spec:
  params:
    - default: "{{ app_name }}"
      name: APP_NAME
    - default: 'https://github.com/fctassinari/quarkus-hello.git'
      name: GIT_REPO
      type: string
    - default: main
      name: GIT_REVISION
      type: string
    - default: .
      name: PATH_CONTEXT
      type: string
    - default: 'image-registry.openshift-image-registry.svc:5000/{{ app_namespace }}/{{ app_name }}:latest'
      name: IMAGE_NAME
      type: string
    - default: latest
      description: The application image tag to build
      name: IMAGE_TAG
    - default: openjdk-17-ubi8
      description: The tag of java imagestream for java version
      name: VERSION
      type: string
    - default: 'https://github.com/fctassinari/quarkus-hello-config.git'
      description: The application manifests git repository
      name: APP_MANIFESTS_GIT
      type: string
  tasks:
    - name: git-clone
      params:
        - name: url
          value: $(params.GIT_REPO)
        - name: revision
          value: $(params.GIT_REVISION)
        - name: refspec
          value: ''
        - name: submodules
          value: 'true'
        - name: depth
          value: '0'
        - name: sslVerify
          value: 'true'
        - name: crtFileName
          value: ca-bundle.crt
        - name: subdirectory
          value: quarkus-hello
        - name: sparseCheckoutDirectories
          value: ''
        - name: deleteExisting
          value: 'true'
        - name: httpProxy
          value: ''
        - name: httpsProxy
          value: ''
        - name: noProxy
          value: ''
        - name: verbose
          value: 'true'
        - name: gitInitImage
          value: 'registry.redhat.io/openshift-pipelines/pipelines-git-init-rhel8@sha256:868966ef9d4b54952d8a74eb83bba40eb1f52c0148994fa704efd0e3797c61c5'
        - name: userHome
          value: /home/git
      taskRef:
        kind: ClusterTask
        name: git-clone
      workspaces:
        - name: output
          workspace: workspace
    - name: unit-tests
      params:
        - name: MAVEN_IMAGE
          value: 'registry.access.redhat.com/ubi9/openjdk-11:1.20-2.1729773465'
        - name: GOALS
          value:
            - package
            - '-f'
            - quarkus-hello
            - '-Dmaven.repo.local=$(workspaces.source.path)/.m2'
            - '-Dmaven.test.skip=true'
      runAfter:
        - git-clone
      taskRef:
        kind: ClusterTask
        name: maven
      workspaces:
        - name: source
          workspace: workspace
        - name: maven-settings
          workspace: maven-settings
    - name: code-analysis
      params:
        - name: MAVEN_IMAGE
          value: 'registry.access.redhat.com/ubi9/openjdk-11:1.20-2.1729773465'
        - name: GOALS
          value:
            - install
            - 'sonar:sonar'
            - '-f'
            - quarkus-hello
            - '-Dsonar.host.url=https://sonarqube-"{{ pipeline_namespace }}".{ cluster_url }/'
            - '-Dsonar.userHome=/tmp/sonar'
            - '-Dsonar.login=4eca82ea102da858362830b04463b02502943e50'
            - '-Dmaven.repo.local=$(workspaces.source.path)/.m2'
            - '-Dmaven.test.skip=true'
      runAfter:
        - git-clone
      taskRef:
        kind: ClusterTask
        name: maven
      workspaces:
        - name: source
          workspace: workspace
        - name: maven-settings
          workspace: maven-settings
    - name: dependency-report
      params:
        - name: SOURCE_DIR
          value: quarkus-hello
      runAfter:
        - git-clone
      taskRef:
        kind: Task
        name: dependency-report
      workspaces:
        - name: source
          workspace: workspace
        - name: maven-settings
          workspace: maven-settings
    - name: release-app
      params:
        - name: MAVEN_IMAGE
          value: 'registry.access.redhat.com/ubi9/openjdk-11:1.20-2.1729773465'
        - name: GOALS
          value:
            - deploy
            - '-f'
            - quarkus-hello
            - '-Dmaven.repo.local=$(workspaces.source.path)/.m2'
            - '-Dmaven.test.skip=true'
            - '-DaltDeploymentRepository=nexus::default::http://nexus.{ cluster_url }/repository/mvn-release/'
      runAfter:
        - code-analysis
        - unit-tests
        - dependency-report
      taskRef:
        kind: ClusterTask
        name: maven
      workspaces:
        - name: source
          workspace: workspace
        - name: maven-settings
          workspace: maven-settings
    - name: build-image
      params:
        - name: TLSVERIFY
          value: 'false'
        - name: MAVEN_MIRROR_URL
          value: 'http://nexus.{ cluster_url }/repository/mvn-release/'
        - name: PATH_CONTEXT
          value: quarkus-hello/target
        - name: IMAGE_NAME
          value: $(params.IMAGE_NAME)
        - name: IMAGE_TAG
          value: $(params.IMAGE_TAG)
        - name: VERSION
          value: $(param.VERSION)
      runAfter:
        - release-app
      taskRef:
        kind: ClusterTask
        name: s2i-java
      workspaces:
        - name: source
          workspace: workspace
    - name: image-scan
      params:
        - name: image
          value: '$(params.IMAGE_NAME):$(params.IMAGE_TAG)'
        - name: rox_api_token
          value: roxsecrets
        - name: rox_central_endpoint
          value: roxsecrets
        - name: output_format
          value: table
        - name: image_digest
          value: $(tasks.build-image.results.IMAGE_DIGEST)
      runAfter:
        - build-image
      taskRef:
        kind: ClusterTask
        name: rox-image-scan
    - name: image-check
      params:
        - name: image
          value: '$(params.IMAGE_NAME):$(params.IMAGE_TAG)'
        - name: rox_api_token
          value: roxsecrets
        - name: rox_central_endpoint
          value: roxsecrets
        - name: image_digest
          value: $(tasks.build-image.results.IMAGE_DIGEST)
      runAfter:
        - build-image
      taskRef:
        kind: ClusterTask
        name: rox-image-check
    - name: deploy-check
      params:
        - name: GIT_REPOSITORY
          value: $(params.APP_MANIFESTS_GIT)
        - name: rox_api_token
          value: roxsecrets
        - name: rox_central_endpoint
          value: roxsecrets
        - name: file
          value: deployment.yaml
        - name: deployment_files_path
          value: app
      runAfter:
        - build-image
      taskRef:
        kind: ClusterTask
        name: rox-deployment-check
      workspaces:
        - name: workspace
          workspace: workspace
    - name: update-deployment
      params:
        - name: GIT_REPOSITORY
          value: $(params.APP_MANIFESTS_GIT)
        - name: GIT_USERNAME
          value: gogs
        - name: GIT_PASSWORD
          value: gogs
        - name: CURRENT_IMAGE
          value: '$(params.IMAGE_NAME):$(params.IMAGE_TAG)'
        - name: NEW_IMAGE
          value: '$(params.IMAGE_NAME)'
        - name: NEW_DIGEST
          value: $(tasks.build-image.results.IMAGE_DIGEST)
        - name: KUSTOMIZATION_PATH
          value: environments/dev
      runAfter:
        - image-scan
        - image-check
        - deploy-check
      taskRef:
        kind: Task
        name: git-update-deployment
  workspaces:
    - name: maven-settings
    - name: workspace
